import { AIMessageChunk, BaseMessage, UsageMetadata } from "@langchain/core/messages";
import Cerebras from "@cerebras/cerebras_cloud_sdk";
import { ToolChoice } from "@langchain/core/language_models/chat_models";
export type CerebrasMessageParam = Cerebras.ChatCompletionCreateParams.AssistantMessageRequest | Cerebras.ChatCompletionCreateParams.SystemMessageRequest | Cerebras.ChatCompletionCreateParams.ToolMessageRequest | Cerebras.ChatCompletionCreateParams.UserMessageRequest;
export type CerebrasToolCall = Cerebras.ChatCompletion.ChatCompletionResponse.Choice.Message.ToolCall;
export declare function convertCerebrasMessagesToLangChain(messages: Cerebras.ChatCompletion.ChatCompletionResponse.Choice.Message, extra?: {
    responseMetadata?: Record<string, any>;
    usageMetadata?: UsageMetadata;
}): AIMessageChunk;
export declare function convertToCerebrasMessageParams(messages: BaseMessage[]): CerebrasMessageParam[];
export declare function formatToCerebrasToolChoice(toolChoice?: ToolChoice): Cerebras.ChatCompletionCreateParams["tool_choice"];
